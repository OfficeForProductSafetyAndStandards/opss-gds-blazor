@inherits BunitContext

@code {
    [Fact]
    public void RendersCorrectGdsHtml()
    {
        // Arrange
        var id = "some-id";
        var title = "some title";
        var classes = "class1 class2";
        var attributes = new Dictionary<string, object>
        {
            { "attr1", "value1" },
            { "attr2", "value2" },
        };
        
        // Act
        var component = Render(
            @<GdsTabs Id="@id" IdPrefix="some-id-prefix" Title="@title" Classes="@classes" Attributes="@attributes"></GdsTabs>
        );

        // Assert
        component.MarkupMatches(
            @<div id="@id" class="govuk-tabs @classes" attr1="value1" attr2="value2">
                <a id="focus-parking_@id" tabindex="-1" aria-hidden="true"></a>
                <h2 class="govuk-tabs__title">@title</h2>
                <ul class="govuk-tabs__list" role="tablist">
                    @* tabs go here *@
                </ul>
                @* panels go here *@
            </div>
        );
    }
    
    [Fact]
    public void RendersPanels_WithCorrectIds()
    {
        // Arrange
        var idPrefix = "some-id-prefix";
        var tabPanel1Id = "tab-panel-1";
        var tabPanel3Id = "tab-panel-3";
        
        // Act
        var component = Render(
            @<GdsTabs Id="tabs-id" IdPrefix="@idPrefix">
                <GdsTabsPanel Id="@tabPanel1Id" Label="tab 1">content 1</GdsTabsPanel>
                <GdsTabsPanel Label="tab 2">content 2</GdsTabsPanel>
                <GdsTabsPanel Id="@tabPanel3Id" Label="tab 3">content 3</GdsTabsPanel>
            </GdsTabs>
            );

        // Assert
        component.MarkupMatches(
            @<div id="tabs-id" class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a id="tab_@tabPanel1Id" class="govuk-tabs__tab" role="tab" href="#tab-panel-1" aria-controls="@tabPanel1Id" aria-selected:ignore tabindex:ignore>tab 1</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a id="tab_@idPrefix-2" class="govuk-tabs__tab" role="tab" href="#@idPrefix-2" aria-controls="@idPrefix-2" aria-selected:ignore tabindex:ignore>tab 2</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a id="tab_@tabPanel3Id" class="govuk-tabs__tab" role="tab" href="#tab-panel-3" aria-controls="@tabPanel3Id" aria-selected:ignore tabindex:ignore>tab 3</a>
                    </li>
                </ul>
                <div id="@tabPanel1Id" class="govuk-tabs__panel" role="tabpanel" aria-labelledby="tab_@tabPanel1Id">content 1</div>
                <div id="@idPrefix-2" class="govuk-tabs__panel govuk-tabs__panel--hidden" role="tabpanel" aria-labelledby="tab_@idPrefix-2">content 2</div>
                <div id="@tabPanel3Id" class="govuk-tabs__panel govuk-tabs__panel--hidden" role="tabpanel" aria-labelledby="tab_@tabPanel3Id">content 3</div>
            </div>);
    }
    
    [Fact]
    public void RendersPanels_WithCorrectDefaultActive()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";
        
        // Act
        var component = Render(
            @<GdsTabs IdPrefix="id-prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
            </GdsTabs>
            );

        // Assert
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
            </div>);
    }
    
    [Fact]
    public void ClickingTab_SetsCorrectActivePanel()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";        
        var tab3Title = "Tab title 3";
        var tab3Content = "Tab 3 content";
        
        var component = Render(
            @<GdsTabs IdPrefix="prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab3Title">@tab3Content</GdsTabsPanel>
            </GdsTabs>
            );
        
        // Act
        component.Find($"a:contains('{tab2Title}')")
            .Click();

        // Assert - second tab should be active, second panel should be visible
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab3Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab3Content</div>
            </div>);
    }
    
    [Fact]
    public void PressingRightArrow_SetsNextPanelActive()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";        
        var tab3Title = "Tab title 3";
        var tab3Content = "Tab 3 content";
        
        var component = Render(
            @<GdsTabs IdPrefix="prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab3Title">@tab3Content</GdsTabsPanel>
            </GdsTabs>
            );
        
        // Act
        component.Find($"a:contains('{tab1Title}')")
            .KeyDown(new KeyboardEventArgs { Key = "ArrowRight" });

        // Assert - second tab should be active, second panel should be visible
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab3Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab3Content</div>
            </div>);
    }
    
    [Fact]
    public void PressingRightArrow_AndRightmostTabAlreadySelected_DoesNothing()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";        
        var tab3Title = "Tab title 3";
        var tab3Content = "Tab 3 content";
        
        var component = Render(
            @<GdsTabs IdPrefix="prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab3Title">@tab3Content</GdsTabsPanel>
            </GdsTabs>
            );
        
        // Act - click tab 3, then press right arrow
        var tab3Anchor = component.Find($"a:contains('{tab3Title}')");
        tab3Anchor.Click();
        tab3Anchor.KeyDown(new KeyboardEventArgs { Key = "ArrowRight" });

        // Assert - third tab should be active, third panel should be visible
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab3Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab3Content</div>
            </div>);
    }
    
    [Fact]
    public void PressingLeftArrow_SetsPreviousPanelActive()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";        
        var tab3Title = "Tab title 3";
        var tab3Content = "Tab 3 content";
        
        var component = Render(
            @<GdsTabs IdPrefix="prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab3Title">@tab3Content</GdsTabsPanel>
            </GdsTabs>
            );
        
        // Act - click tab 3, then press left arrow
        var tab3Anchor = component.Find($"a:contains('{tab3Title}')");
        tab3Anchor.Click();
        tab3Anchor.KeyDown(new KeyboardEventArgs { Key = "ArrowLeft" });

        // Assert - second tab should be active, second panel should be visible
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab3Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab3Content</div>
            </div>);
    }
    
    [Fact]
    public void PressingLeftArrow_AndLeftmostTabAlreadySelected_DoesNothing()
    {
        // Arrange
        var tab1Title = "Tab title 1";
        var tab1Content = "Tab 1 content";
        var tab2Title = "Tab title 2";
        var tab2Content = "Tab 2 content";        
        var tab3Title = "Tab title 3";
        var tab3Content = "Tab 3 content";
        
        var component = Render(
            @<GdsTabs IdPrefix="prefix">
                <GdsTabsPanel Label="@tab1Title">@tab1Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab2Title">@tab2Content</GdsTabsPanel>
                <GdsTabsPanel Label="@tab3Title">@tab3Content</GdsTabsPanel>
            </GdsTabs>
            );
        
        // Act - press left arrow, already on leftmost tab
        var tab1Anchor = component.Find($"a:contains('{tab1Title}')");
        tab1Anchor.KeyDown(new KeyboardEventArgs { Key = "ArrowLeft" });

        // Assert - first tab should be active, first panel should be visible
        component.MarkupMatches(
            @<div class="govuk-tabs">
                <a diff:ignore></a>
                <h2 diff:ignore></h2>
                <ul class="govuk-tabs__list" role:ignore>
                    <li class="govuk-tabs__list-item govuk-tabs__list-item--selected" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="true" tabindex="0" id:ignore role:ignore href:ignore aria-controls:ignore>@tab1Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab2Title</a>
                    </li>
                    <li class="govuk-tabs__list-item" role:ignore>
                        <a class="govuk-tabs__tab" aria-selected="false" tabindex="-1" id:ignore role:ignore href:ignore aria-controls:ignore>@tab3Title</a>
                    </li>
                </ul>
                <div class="govuk-tabs__panel" id:ignore role:ignore aria-labelledby:ignore>@tab1Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab2Content</div>
                <div class="govuk-tabs__panel govuk-tabs__panel--hidden" id:ignore role:ignore aria-labelledby:ignore>@tab3Content</div>
            </div>);
    }
}