@inherits BunitContext

@code {
    [Fact]
    public void OutputsCheckboxes()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="whereDoYouLive">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                Where do you live?
            </GdsLegend>
        </LegendTemplate>
        <ChildContent>
            <GdsRadio Value="england">England</GdsRadio>
            <GdsRadio Value="scotland">Scotland</GdsRadio>
            <GdsRadio Value="wales">Wales</GdsRadio>
            <GdsRadio Value="northern-ireland">Northern Ireland</GdsRadio>
        </ChildContent>
    </GdsRadios>
    );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    Where do you live?
                </h1>
            </legend>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive" name="whereDoYouLive" type="radio" value="england">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive">
                        England
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-2" name="whereDoYouLive" type="radio" value="scotland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-2">
                        Scotland
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-3" name="whereDoYouLive" type="radio" value="wales">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-3">
                        Wales
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-4" name="whereDoYouLive" type="radio" value="northern-ireland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-4">
                        Northern Ireland
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithLabel()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="whereDoYouLive">
        <LegendTemplate>
            <GdsLegend>
                Where do you live?
            </GdsLegend>
        </LegendTemplate>
        <ChildContent>
            <GdsRadio Value="england">England</GdsRadio>
            <GdsRadio Value="scotland">Scotland</GdsRadio>
            <GdsRadio Value="wales">Wales</GdsRadio>
            <GdsRadio Value="northern-ireland">Northern Ireland</GdsRadio>
        </ChildContent>
    </GdsRadios>
    );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend">
                Where do you live?
            </legend>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive" name="whereDoYouLive" type="radio" value="england">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive">
                        England
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-2" name="whereDoYouLive" type="radio" value="scotland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-2">
                        Scotland
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-3" name="whereDoYouLive" type="radio" value="wales">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-3">
                        Wales
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-4" name="whereDoYouLive" type="radio" value="northern-ireland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-4">
                        Northern Ireland
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithInlineClass()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="changedName" Classes=@RadioClasses.Inline>
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                Have you changed your name?
            </GdsLegend>
        </LegendTemplate>
        <HintTemplate>
            <GdsHint>
                This includes changing your last name or spelling your name differently
            </GdsHint>
        </HintTemplate>
        <ChildContent>
            <GdsRadio Value="yes">Yes</GdsRadio>
            <GdsRadio Value="no">No</GdsRadio>
        </ChildContent>
    </GdsRadios>
        );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset" aria-describedby="changedName-hint">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    Have you changed your name?
                </h1>
            </legend>
            <div id="changedName-hint" class="govuk-hint">
                This includes changing your last name or spelling your name differently
            </div>
            <div class="govuk-radios govuk-radios--inline" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="changedName" name="changedName" type="radio" value="yes">
                    <label class="govuk-label govuk-radios__label" for="changedName">
                        Yes
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="changedName-2" name="changedName" type="radio" value="no">
                    <label class="govuk-label govuk-radios__label" for="changedName-2">
                        No
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithHints()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="signIn">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                How do you want to sign in?
            </GdsLegend>
        </LegendTemplate>
        <HintTemplate>
            <GdsHint>
                You’ll need an account to prove your identity and complete your Self Assessment
            </GdsHint>
        </HintTemplate>
        <ChildContent>
            <GdsRadio Value="government-gateway">
                <HintTemplate>
                    @* TODO: Can this be improved? *@
                    <GdsHint Classes="govuk-radios__hint">
                        You’ll have a user ID if you’ve registered for Self Assessment or filed a tax return online before
                    </GdsHint>
                </HintTemplate>
                <ChildContent>
                    Sign in with Government Gateway
                </ChildContent>
            </GdsRadio>
            <GdsRadio Value="govuk-one-login">
                <HintTemplate>
                    <GdsHint Classes="govuk-radios__hint">
                        If you don’t have a GOV.UK One Login, you can create one
                    </GdsHint>
                </HintTemplate>
                <ChildContent>
                    Sign in with GOV.UK One Login
                </ChildContent>
            </GdsRadio>
        </ChildContent>
    </GdsRadios>
        );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset" aria-describedby="signIn-hint">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    How do you want to sign in?
                </h1>
            </legend>
            <div id="signIn-hint" class="govuk-hint">
                You’ll need an account to prove your identity and complete your Self Assessment
            </div>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="signIn" name="signIn" type="radio" value="government-gateway" aria-describedby="signIn-item-hint">
                    <label class="govuk-label govuk-radios__label" for="signIn">
                        Sign in with Government Gateway
                    </label>
                    <div id="signIn-item-hint" class="govuk-hint govuk-radios__hint">
                        You’ll have a user ID if you’ve registered for Self Assessment or filed a tax return online before
                    </div>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="signIn-2" name="signIn" type="radio" value="govuk-one-login" aria-describedby="signIn-2-item-hint">
                    <label class="govuk-label govuk-radios__label" for="signIn-2">
                        Sign in with GOV.UK One Login
                    </label>
                    <div id="signIn-2-item-hint" class="govuk-hint govuk-radios__hint">
                        If you don’t have a GOV.UK One Login, you can create one
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithDivider()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="whereDoYouLive">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                Where do you live?
            </GdsLegend>
        </LegendTemplate>
        <ChildContent>
            <GdsRadio Value="england">England</GdsRadio>
            <GdsRadio Value="scotland">Scotland</GdsRadio>
            <GdsRadio Value="wales">Wales</GdsRadio>
            <GdsRadio Value="northern-ireland">Northern Ireland</GdsRadio>
            <GdsRadioDivider>or</GdsRadioDivider>
            <GdsRadio Value="abroad">I am a British citizen living abroad</GdsRadio>
        </ChildContent>
    </GdsRadios>
    );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    Where do you live?
                </h1>
            </legend>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive" name="whereDoYouLive" type="radio" value="england">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive">
                        England
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-2" name="whereDoYouLive" type="radio" value="scotland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-2">
                        Scotland
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-3" name="whereDoYouLive" type="radio" value="wales">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-3">
                        Wales
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-4" name="whereDoYouLive" type="radio" value="northern-ireland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-4">
                        Northern Ireland
                    </label>
                </div>
                <div class="govuk-radios__divider">or</div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-6" name="whereDoYouLive" type="radio" value="abroad">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-6">
                        I am a British citizen living abroad
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithConditional()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="contact">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                How would you prefer to be contacted?
            </GdsLegend>
        </LegendTemplate>
        <HintTemplate>
            <GdsHint>Select one option</GdsHint>
        </HintTemplate>
        <ChildContent>
            <GdsRadio Value="email" Text="Email">
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-email" Name="contactByEmail" Type="email" Autocomplete="email" Spellcheck="false" Classes=@LayoutWidth.OneThird>
                        <LabelTemplate>
                            <GdsLabel>Email address</GdsLabel>
                        </LabelTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
            <GdsRadio Value="phone" Text="Phone">
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-phone" Name="contactByPhone" Type="tel" Autocomplete="tel" Classes=@LayoutWidth.OneThird>
                        <LabelTemplate>
                            <GdsLabel>Phone number</GdsLabel>
                        </LabelTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
            <GdsRadio Value="text" Text="Text message">
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-text" Name="contactByText" Type="tel" Autocomplete="tel" Classes=@LayoutWidth.OneThird>
                        <LabelTemplate>
                            <GdsLabel>Mobile phone number</GdsLabel>
                        </LabelTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
        </ChildContent>
    </GdsRadios>
        );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset" aria-describedby="contact-hint">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    How would you prefer to be contacted?
                </h1>
            </legend>
            <div id="contact-hint" class="govuk-hint">
                Select one option
            </div>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact" name="contact" type="radio" value="email" data-aria-controls="conditional-contact">
                    <label class="govuk-label govuk-radios__label" for="contact">
                        Email
                    </label>
                </div>
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-contact">
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="contact-by-email">
                            Email address
                        </label>
                        <input class="govuk-input govuk-!-width-one-third" id="contact-by-email" name="contactByEmail" type="email" spellcheck="false" autocomplete="email">
                    </div>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact-2" name="contact" type="radio" value="phone" data-aria-controls="conditional-contact-2">
                    <label class="govuk-label govuk-radios__label" for="contact-2">
                        Phone
                    </label>
                </div>
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-contact-2">
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="contact-by-phone">
                            Phone number
                        </label>
                        <input class="govuk-input govuk-!-width-one-third" id="contact-by-phone" name="contactByPhone" type="tel" autocomplete="tel">
                    </div>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact-3" name="contact" type="radio" value="text" data-aria-controls="conditional-contact-3">
                    <label class="govuk-label govuk-radios__label" for="contact-3">
                        Text message
                    </label>
                </div>
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-contact-3">
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="contact-by-text">
                            Mobile phone number
                        </label>
                        <input class="govuk-input govuk-!-width-one-third" id="contact-by-text" name="contactByText" type="tel" autocomplete="tel">
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithSmallInputs()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="changedName" Classes=@RadioClasses.Small>
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Medium>
                Filter
            </GdsLegend>
        </LegendTemplate>
        <ChildContent>
            <GdsRadio Value="month">Monthly</GdsRadio>
            <GdsRadio Value="year">Yearly</GdsRadio>
        </ChildContent>
    </GdsRadios>
    );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                <h1 class="govuk-fieldset__heading">
                    Filter
                </h1>
            </legend>
            <div class="govuk-radios govuk-radios--small" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="changedName" name="changedName" type="radio" value="month">
                    <label class="govuk-label govuk-radios__label" for="changedName">
                        Monthly
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="changedName-2" name="changedName" type="radio" value="year">
                    <label class="govuk-label govuk-radios__label" for="changedName-2">
                        Yearly
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithErrorMessage()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="whereDoYouLive">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                Where do you live?
            </GdsLegend>
        </LegendTemplate>
        <ErrorMessageTemplate>
            <GdsErrorMessage>
                Select the country where you live
            </GdsErrorMessage>
        </ErrorMessageTemplate>
        <ChildContent>
            <GdsRadio Value="england">England</GdsRadio>
            <GdsRadio Value="scotland">Scotland</GdsRadio>
            <GdsRadio Value="wales">Wales</GdsRadio>
            <GdsRadio Value="northern-ireland">Northern Ireland</GdsRadio>
        </ChildContent>
    </GdsRadios>
        );

        component.MarkupMatches(
    @<div class="govuk-form-group govuk-form-group--error">
        <fieldset class="govuk-fieldset" aria-describedby="whereDoYouLive-error">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    Where do you live?
                </h1>
            </legend>
            <p id="whereDoYouLive-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> Select the country where you live
            </p>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive" name="whereDoYouLive" type="radio" value="england">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive">
                        England
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-2" name="whereDoYouLive" type="radio" value="scotland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-2">
                        Scotland
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-3" name="whereDoYouLive" type="radio" value="wales">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-3">
                        Wales
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="whereDoYouLive-4" name="whereDoYouLive" type="radio" value="northern-ireland">
                    <label class="govuk-label govuk-radios__label" for="whereDoYouLive-4">
                        Northern Ireland
                    </label>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }

    [Fact]
    public void OutputsCheckboxesWithConditionalErrorMessage()
    {
        // Arrange
        var component = Render(
    @<GdsRadios Name="contact">
        <LegendTemplate>
            <GdsLegend IsPageHeading=@true Classes=@FieldsetLegendSize.Large>
                How would you prefer to be contacted?
            </GdsLegend>
        </LegendTemplate>
        <HintTemplate>
            <GdsHint>Select one option</GdsHint>
        </HintTemplate>
        <ChildContent>
            <GdsRadio Value="email" Text="Email" Checked=@true>
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-email" Name="contactByEmail" Type="email" Autocomplete="email" Spellcheck="false" Classes=@LayoutWidth.OneHalf>
                        <LabelTemplate>
                            <GdsLabel>Email address</GdsLabel>
                        </LabelTemplate>
                        <ErrorMessageTemplate>
                            <GdsErrorMessage>Email address cannot be blank</GdsErrorMessage>
                        </ErrorMessageTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
            <GdsRadio Value="phone" Text="Phone">
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-phone" Name="contactByPhone" Type="tel" Autocomplete="tel" Classes=@LayoutWidth.OneThird>
                        <LabelTemplate>
                            <GdsLabel>Phone number</GdsLabel>
                        </LabelTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
            <GdsRadio Value="text" Text="Text message">
                <ConditionalTemplate>
                    <GdsTextInput Id="contact-by-text" Name="contactByText" Type="tel" Autocomplete="tel" Classes=@LayoutWidth.OneThird>
                        <LabelTemplate>
                            <GdsLabel>Mobile phone number</GdsLabel>
                        </LabelTemplate>
                    </GdsTextInput>
                </ConditionalTemplate>
            </GdsRadio>
        </ChildContent>
    </GdsRadios>
    );

        component.MarkupMatches(
    @<div class="govuk-form-group">
        <fieldset class="govuk-fieldset" aria-describedby="contact-hint">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    How would you prefer to be contacted?
                </h1>
            </legend>
            <div id="contact-hint" class="govuk-hint">
                Select one option
            </div>
            <div class="govuk-radios" data-module="govuk-radios">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact" name="contact" type="radio" value="email" checked data-aria-controls="conditional-contact">
                    <label class="govuk-label govuk-radios__label" for="contact">
                        Email
                    </label>
                </div>
                <div class="govuk-radios__conditional" id="conditional-contact">
                    <div class="govuk-form-group govuk-form-group--error">
                        <label class="govuk-label" for="contact-by-email">
                            Email address
                        </label>
                        <p id="contact-by-email-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> Email address cannot be blank
                        </p>
                        <input class="govuk-input govuk-!-width-one-half govuk-input--error" id="contact-by-email" name="contactByEmail" type="email" spellcheck="false" aria-describedby="contact-by-email-error" autocomplete="email">
                    </div>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact-2" name="contact" type="radio" value="phone" data-aria-controls="conditional-contact-2">
                    <label class="govuk-label govuk-radios__label" for="contact-2">
                        Phone
                    </label>
                </div>
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-contact-2">
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="contact-by-phone">
                            Phone number
                        </label>
                        <input class="govuk-input govuk-!-width-one-third" id="contact-by-phone" name="contactByPhone" type="tel" autocomplete="tel">
                    </div>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="contact-3" name="contact" type="radio" value="text" data-aria-controls="conditional-contact-3">
                    <label class="govuk-label govuk-radios__label" for="contact-3">
                        Text message
                    </label>
                </div>
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-contact-3">
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="contact-by-text">
                            Mobile phone number
                        </label>
                        <input class="govuk-input govuk-!-width-one-third" id="contact-by-text" name="contactByText" type="tel" autocomplete="tel">
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
        );
    }
}