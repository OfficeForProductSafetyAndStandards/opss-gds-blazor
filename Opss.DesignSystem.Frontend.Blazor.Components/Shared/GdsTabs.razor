@inherits GdsWithContent

<div id="@Id" class="govuk-tabs @Classes" @attributes="@Attributes">
    <h2 class="govuk-tabs__title">@Title</h2>
    <ul class="govuk-tabs__list" role="tablist">
        @foreach (var panel in Panels)
        {
            <li class="govuk-tabs__list-item @GetActivePanelCss(panel)" role="presentation">
                <a id="tab_@panel.Id" class="govuk-tabs__tab" role="tab" @onclick="() => ActivatePanel(panel)" href="#@panel.Id">@panel.Label</a>
            </li>
        }
    </ul>
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    /// <summary>
    /// Sets the ID of the tabs component
    /// </summary>
    [Parameter]
    public string? Id { get; set; }
    
    /// <summary>
    /// Optional prefix. This is used to prefix the ID of each tab panel, separated by '-'.
    /// </summary>
    [Parameter]
    public string? IdPrefix { get; set; }
    
    /// <summary>
    /// Sets the title of the tabs component table of contents
    /// </summary>
    [Parameter]
    public string? Title { get; set; }
    
    internal GdsTabsPanel ActivePanel { get; private set; }

    internal List<GdsTabsPanel> Panels { get; } = [];

    internal void AddPanel(GdsTabsPanel panel)
    {
        //todo: throw exception if no id or idprefix
        Panels.Add(panel);
        if (Panels[0] == panel)
        {
            ActivePanel = panel;
        }
        panel.Id ??= $"{IdPrefix}-{Panels.Count}";
        
        StateHasChanged();
    }

    private void ActivatePanel(GdsTabsPanel panel)
    {
        ActivePanel = panel;
    }
    
    private string GetActivePanelCss(GdsTabsPanel panel)
    {
        return panel == ActivePanel ? "govuk-tabs__list-item--selected" : "";
    }
}