@inherits GdsWithHref

@* <summary>
    Give users a way to quickly and safely exit a service, website or application.
</summary> *@

@switch (ButtonType)
{
    case ExitPageType.Button:
        <div id=@Id
             class="govuk-exit-this-page @Classes"
             data-module="govuk-exit-this-page"
             data-i18n.activated=@ActivatedText
             data-i18n.timed-out=@TimedOutText
             data-i18n.press-two-more-times=@PressTwoMoreTimesText
             data-i18n.press-one-more-time=@PressOneMoreTimeText
             @attributes=@Attributes
        >
            <a href=@Href
               role="button"
               draggable="false"
               class="govuk-button govuk-button--warning govuk-exit-this-page__button govuk-js-exit-this-page-button"
               data-module="govuk-button"
               rel="nofollow noreferrer">
                @if (ChildContent == null)
                {
                    <span class="govuk-visually-hidden">Emergency</span> @defaultText
                }
                else
                {
                    @ChildContent
                }
            </a>
        </div>
        break;
    case ExitPageType.SkipLink:
        <a id=@Id
           href=@Href
           class="govuk-skip-link govuk-js-exit-this-page-skiplink @Classes"
           rel="nofollow noreferrer"
           data-module="govuk-skip-link"
           @attributes=@Attributes
        >
            @if(ChildContent == null)
            {
                @defaultText
            } else
            {
                @ChildContent
            }
        </a>
        break;
}

@code {
    #region Public Parameters
    /// <summary>
    /// Id attribute to add to the exit this page container.
    /// </summary>
    [Parameter]
    public string? Id { get; set; }

    /// <summary>
    /// Switches between an Emergency Button and a SkipLink
    /// Defaults to Button
    /// </summary>
    [Parameter]
    public ExitPageType ButtonType { get; set; } = ExitPageType.Button;

    /// <summary>
    /// Text announced by screen readers when Exit this Page has been
    /// activated via the keyboard shortcut. Defaults to "Loading.".
    /// </summary>
    [Parameter]
    public string? ActivatedText { get; set; }

    /// <summary>
    /// Text announced by screen readers when the keyboard shortcut
    /// has timed out without successful activation. Defaults to 
    /// "Exit this page expired.".
    /// </summary>
    [Parameter]
    public string? TimedOutText { get; set; }

    /// <summary>
    /// Text announced by screen readers when the user must press
    /// Shift two more times to activate the button. Defaults to
    /// "Shift, press 2 more times to exit.".
    /// </summary>
    [Parameter]
    public string? PressTwoMoreTimesText { get; set; }

    /// <summary>
    /// Text announced by screen readers when the user must press 
    /// Shift one more time to activate the button. Defaults to 
    /// "Shift, press 1 more time to exit.".
    /// </summary>
    [Parameter]
    public string? PressOneMoreTimeText { get; set; }
    #endregion

    #region Private Constants
    private const string defaultText = "Exit this page";
    #endregion
}
