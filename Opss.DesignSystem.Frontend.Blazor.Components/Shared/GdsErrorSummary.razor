@inherits GdsWithContent;

@* <summary>
    Use this component at the top of a page to summarise any errors a user has made.
</summary> *@

<div id=@Id
     class="govuk-error-summary @Classes"
     data-module="govuk-error-summary"
     data-disable-auto-focus=@DisableAutoFocus?.ToString().ToLowerInvariant()
     @attributes=@Attributes>
    <div role="alert">
        <h2 class="govuk-error-summary__title">
            @if(TitleTemplate == null)
            {
                @TitleText
            }
        </h2>
        @if (TitleTemplate != null)
        {
            @TitleTemplate
        }
        <div class="govuk-error-summary__body">
            @if (DescriptionText != null || DescriptionTemplate != null)
            {
                <p>
                    @if (DescriptionTemplate == null)
                    {
                        @DescriptionText
                    }
                </p>
                @if (DescriptionTemplate != null)
                {
                    @DescriptionTemplate
                }
            }
            <ul class="govuk-list govuk-error-summary__list">
                <CascadingValue Value=this>
                    @ChildContent
                </CascadingValue>
            </ul>
        </div>
    </div>
</div>

@code {
    #region Public Parameters
    /// <summary>
    /// If titleTemplate is set, this is not required. Text to use
    /// for the heading of the error summary block. If titleTemplate
    /// is provided, titleText will be ignored.
    /// </summary>
    [Parameter]
    public string TitleText { get; set; } = "There is a problem";

    /// <summary>
    /// If titleText is set, this is not required. HTML to use
    /// for the heading of the error summary block. If titleTemplate
    /// is provided, titleText will be ignored.
    /// </summary>
    [Parameter]
    public RenderFragment? TitleTemplate { get; set; }

    /// <summary>
    /// Text to use for the description of the errors. If you set
    /// descriptionTemplate, the component will ignore descriptionText.
    /// </summary>
    [Parameter]
    public string? DescriptionText { get; set; }

    /// <summary>
    /// HTML to use for the description of the errors. If you set
    /// this option, the component will ignore descriptionText.
    /// </summary>
    [Parameter]
    public RenderFragment? DescriptionTemplate { get; set; }

    /// <summary>
    /// Prevent moving focus to the error summary when the page loads.
    /// </summary>
    [Parameter]
    public bool? DisableAutoFocus { get; set; }
    #endregion
}
