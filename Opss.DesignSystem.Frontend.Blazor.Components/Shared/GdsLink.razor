@inherits GdsWithHref

<AnchorLink id=@Id
    Classes=@classes
    Href=@Href
    Attributes=@linkAttributes>
    @ChildContent

    @if (!string.IsNullOrEmpty(VisuallyHiddenText))
    {
        <span class="govuk-visually-hidden">@VisuallyHiddenText</span>
    }
</AnchorLink>

@code {
        #region Public Parameters
        /// <summary>
        /// The Id attached to the link element.
        /// </summary>
        [Parameter]
        public string? Id { get; set; }

        /// <summary>
        /// A visually hidden prefix used after the link.
        /// </summary>
        [Parameter]
        public string? VisuallyHiddenText { get; set; }

        /// <summary>
        /// Indicates that the link should open in a new tab:
        /// Includes rel="noreferrer noopener" along with target="_blank" to reduce the risk of reverse tabnabbing.
        /// </summary>
        [Parameter]
        public bool OpenInNewTab { get; set; }

        /// <summary>
        /// Indicates that the component is on a dark background and should utilise the inverse class
        /// </summary>
        [Parameter]
        public bool IsOnDarkBackground { get; set; }
    #endregion

        #region Private Properties
    private Dictionary<string, object> linkAttributes
    {
        get
        {
            if(!string.IsNullOrEmpty(Id)) Attributes!.Add("id", Id);

            if (OpenInNewTab) 
            {
                Attributes!.Add("target", "_blank");
                Attributes!.Add("rel", "noreferrer noopener");
            }

            return Attributes!;
        }
    }

    private string classes
    {
        get
        {
            var classBuilder = "govuk-link";
            if (IsOnDarkBackground) classBuilder += " govuk-link--inverse";
            if(!string.IsNullOrEmpty(Classes)) classBuilder += $" {Classes}";

            return classBuilder;
        }
    }
    #endregion
}